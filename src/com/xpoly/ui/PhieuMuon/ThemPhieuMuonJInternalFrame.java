/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xpoly.ui.PhieuMuon;

import com.xpoly.DAO.NguoiDungDAO;
import com.xpoly.DAO.QuyenSachDAO;
import com.xpoly.DAO.TuaSachDAO;
import com.xpoly.Service.PhieuMuon_Service;
import com.xpoly.helper.DialogHelper;
import com.xpoly.helper.EzHelper;
import com.xpoly.helper.JdbcHelper;
import com.xpoly.helper.LoginHelper;
import com.xpoly.model.NguoiDung;
import com.xpoly.model.PMCT;
import com.xpoly.model.PhieuMuon;
import com.xpoly.model.QuyenSach;
import com.xpoly.model.TuaSach;
import com.xpoly.ui.QLSach.UpdateSach;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JRootPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class ThemPhieuMuonJInternalFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form ThemPhieuMuonJInternalFrame
     */
    String[] columns = {"Mã quyển sách", "Tên tựa sách", "Ghi chú"};
    DefaultTableModel tblModel = new DefaultTableModel(columns, 0) {

        @Override
        public boolean isCellEditable(int row, int column) {
            //all cells false
            return false;
        }
    };

    PhieuMuon_Service service = new PhieuMuon_Service();
    String maBanDoc = "";
    int maQuyenSach;
    NguoiDung nd;
    QuyenSach qSach;
    TuaSach tSach;
    PMCT pmct;
    int rowIndex = 0;
    List<PMCT> lst_pmct = new ArrayList<>();

    int soSachDuocMuon = 0;

    public ThemPhieuMuonJInternalFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txt_timKiem = new javax.swing.JTextField();
        btn_timkiem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_ctpm = new javax.swing.JTable();
        btn_xoa1 = new javax.swing.JButton();
        btn_xoaHet = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbl_cover = new javax.swing.JLabel();
        lbl_maTuaSach = new javax.swing.JLabel();
        lbl_tenSach = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_maBanDoc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbl_hoten = new javax.swing.JLabel();
        lbl_soSachDuocMuon = new javax.swing.JLabel();
        btn_doiBanDoc = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_ghiChu = new javax.swing.JTextArea();
        btn_muon = new javax.swing.JButton();

        txt_timKiem.setEnabled(false);
        txt_timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_timKiemActionPerformed(evt);
            }
        });

        btn_timkiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btn_timkiem.setText("Tìm kiếm");
        btn_timkiem.setEnabled(false);
        btn_timkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_timKiem)
                    .addComponent(btn_timkiem, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("danh sách sách mượn"));

        tbl_ctpm.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_ctpm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_ctpmMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_ctpm);

        btn_xoa1.setText("Xoá quyển sách");
        btn_xoa1.setEnabled(false);
        btn_xoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoa1ActionPerformed(evt);
            }
        });

        btn_xoaHet.setText("Xoá tất");
        btn_xoaHet.setEnabled(false);
        btn_xoaHet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaHetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_xoa1)
                .addGap(18, 18, 18)
                .addComponent(btn_xoaHet)
                .addGap(23, 23, 23))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_xoa1)
                    .addComponent(btn_xoaHet))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sách"));

        jLabel4.setText("Mã tựa sách:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_cover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_tenSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(lbl_maTuaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_maTuaSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lbl_tenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_cover, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_save.setText("Lưu");
        btn_save.setEnabled(false);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        jLabel2.setText("Số sách được mượn: ");

        txt_maBanDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_maBanDocActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã bạn đọc:");

        jLabel3.setText("Họ tên:");

        btn_doiBanDoc.setText("Đổi bạn đọc");
        btn_doiBanDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doiBanDocActionPerformed(evt);
            }
        });

        txt_ghiChu.setColumns(20);
        txt_ghiChu.setRows(5);
        jScrollPane1.setViewportView(txt_ghiChu);

        btn_muon.setText("Mượn");
        btn_muon.setEnabled(false);
        btn_muon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_muonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_maBanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_doiBanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_hoten, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btn_muon)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btn_save, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_soSachDuocMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_maBanDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btn_doiBanDoc))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_hoten, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_soSachDuocMuon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_save)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_muon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_timKiemActionPerformed
        // TODO add your handling code here:
        try {
            maQuyenSach = Integer.parseInt(txt_timKiem.getText());
            qSach = new QuyenSachDAO().selectById(maQuyenSach);
            if (qSach == null) {
                return;
            }
            tSach = new TuaSachDAO().selectById(qSach.getMaTuaSach());

            if (service.kiemTraQuyenSach(maQuyenSach, maBanDoc) == -1) {
                DialogHelper.alert(jPanel1, "Bạn đang mượn tựa sách này!");
                return;
            }

            if (service.kiemTraQuyenSach(maQuyenSach, maBanDoc) == 0) {
                DialogHelper.alert(jPanel1, "Bạn không thể mượn được quyển sách này!");
                return;
            }
            lbl_maTuaSach.setText(tSach.getMaTuaSach() + "");
            lbl_tenSach.setText(tSach.getTenTuaSach());
            setBtnEnabled();
            lbl_cover.setIcon(EzHelper.readImg(tSach.getAnh()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txt_timKiemActionPerformed

    private void btn_timkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemActionPerformed
        // TODO add your handling code here:
        try {
            maQuyenSach = Integer.parseInt(txt_timKiem.getText());
            qSach = new QuyenSachDAO().selectById(maQuyenSach);
            if (qSach == null) {
                return;
            }
            tSach = new TuaSachDAO().selectById(qSach.getMaTuaSach());

            if (service.kiemTraQuyenSach(maQuyenSach, maBanDoc) == -1) {
                DialogHelper.alert(jPanel1, "Bạn đang mượn tựa sách này!");
                return;
            }

            if (service.kiemTraQuyenSach(maQuyenSach, maBanDoc) == 0) {
                DialogHelper.alert(jPanel1, "Bạn không thể mượn được quyển sách này!");
                return;
            }
            lbl_maTuaSach.setText(tSach.getMaTuaSach() + "");
            lbl_tenSach.setText(tSach.getTenTuaSach());
            setBtnEnabled();
            if (tSach.getAnh() != null) {
                getAnh(tSach.getAnh());
            } else {
                lbl_cover.setIcon(EzHelper.readImg("no_cover.jpg"));
            }
            //            lbl_cover.setIcon(EzHelper.readImg(tSach.getAnh()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_timkiemActionPerformed

    private void tbl_ctpmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_ctpmMouseClicked
        // TODO add your handling code here:
        rowIndex = tbl_ctpm.getSelectedRow();
    }//GEN-LAST:event_tbl_ctpmMouseClicked

    private void btn_xoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoa1ActionPerformed
        // TODO add your handling code here:
        try {
            tblModel.removeRow(rowIndex);
            lst_pmct.remove(rowIndex);
            setBtnEnabled();
            soSachDuocMuon(1);
        } catch (Exception e) {
            DialogHelper.alert(jPanel1, "Cần chọn thông tin cần xóa");
        }
    }//GEN-LAST:event_btn_xoa1ActionPerformed

    private void btn_xoaHetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaHetActionPerformed
        // TODO add your handling code here:
        if (!lst_pmct.isEmpty()) {
            soSachDuocMuon(lst_pmct.size());
            tblModel.setRowCount(0);
            lst_pmct = new ArrayList<>();
            setBtnEnabled();
        }
    }//GEN-LAST:event_btn_xoaHetActionPerformed

    private void btn_muonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_muonActionPerformed
        // TODO add your handling code here:
        pmct = new PMCT();
        pmct.setMaQuyenSach(maQuyenSach);
        pmct.setGhiChu(txt_ghiChu.getText());
        pmct.setTrangThai(0);
        pmct.setSoLanGiaHan(0);
        pmct.setMaPhieuMuon(0);
        QuyenSachDAO qSDAO = new QuyenSachDAO();
        if (!lst_pmct.isEmpty()) {
            for (PMCT x : lst_pmct) {
                if (qSDAO.selectById(x.getMaQuyenSach()).getMaTuaSach()
                        == qSDAO.selectById(pmct.getMaQuyenSach()).getMaTuaSach()) {
                    DialogHelper.alert(jPanel1, "Tựa sách đã trong danh sách mượn");
                    return;
                }
            }
        }
        lst_pmct.add(pmct);
        tblModel.addRow(new Object[]{maQuyenSach, tSach.getTenTuaSach(), pmct.getGhiChu()});
        tbl_ctpm.setRowSelectionInterval(rowIndex, rowIndex);
        soSachDuocMuon(-1);
        setBtnEnabled();
    }//GEN-LAST:event_btn_muonActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
        try {
            PhieuMuon phieuMuon = new PhieuMuon();
            phieuMuon.setMaBanDoc(maBanDoc);
            phieuMuon.setMaPhieuMuon(0);
            phieuMuon.setNgayMuon(EzHelper.now());
            phieuMuon.setNguoiTaoPhieu(LoginHelper.USER.getMaND());
            service.themPhieuMuon(phieuMuon);
            service.themPhieuMuonCT(lst_pmct);
            DialogHelper.alert(jPanel1, "Phiếu được tạo thành công");
            clearAll();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void txt_maBanDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_maBanDocActionPerformed
        // TODO add your handling code here:
        maBanDoc = txt_maBanDoc.getText();
        nd = new NguoiDungDAO().selectById(maBanDoc);
        if (nd != null) {
            lbl_hoten.setText(nd.getHoTen());
            soSachDuocMuon = service.soSachMuonDuoc(maBanDoc);
            if (soSachDuocMuon <= 0) {
                DialogHelper.alert(jPanel1, "Người dùng cần trả sách trước khi mượn tiếp");
                btn_timkiem.setEnabled(false);
                txt_timKiem.setEnabled(false);
            } else {
                btn_timkiem.setEnabled(true);
                txt_timKiem.setEnabled(true);
            }
            lbl_soSachDuocMuon.setText(soSachDuocMuon + "");
            txt_maBanDoc.setEnabled(false);
        }
    }//GEN-LAST:event_txt_maBanDocActionPerformed

    private void btn_doiBanDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doiBanDocActionPerformed
        // TODO add your handling code here:
        if (txt_maBanDoc.getText().isEmpty()) {
            return;
        }
        if (!lst_pmct.isEmpty()) {

            boolean ans = DialogHelper.confirm(jPanel1, "Phiếu mượn sẽ bị xóa hết, bạn chắc chắn muốn tiếp tục không?");
            if (ans) {
                clearAll();
                btn_xoaHetActionPerformed(evt);
                setBtnEnabled();
            }
        }
        txt_maBanDoc.setEnabled(true);
    }//GEN-LAST:event_btn_doiBanDocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_doiBanDoc;
    private javax.swing.JButton btn_muon;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_timkiem;
    private javax.swing.JButton btn_xoa1;
    private javax.swing.JButton btn_xoaHet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_cover;
    private javax.swing.JLabel lbl_hoten;
    private javax.swing.JLabel lbl_maTuaSach;
    private javax.swing.JLabel lbl_soSachDuocMuon;
    private javax.swing.JLabel lbl_tenSach;
    private javax.swing.JTable tbl_ctpm;
    private javax.swing.JTextArea txt_ghiChu;
    private javax.swing.JTextField txt_maBanDoc;
    private javax.swing.JTextField txt_timKiem;
    // End of variables declaration//GEN-END:variables
 private void init() {
        putClientProperty("JInternalFrame.isPalette", Boolean.TRUE);
        getRootPane().setWindowDecorationStyle(JRootPane.NONE);
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.setBorder(null);
        tbl_ctpm.setModel(tblModel);
//        LoginHelper.USER = new NguoiDung("ND004");
    }

    private void setBtnEnabled() {
        btn_xoa1.setEnabled(tblModel.getRowCount() > 0);
        btn_xoaHet.setEnabled(tblModel.getRowCount() > 0);
        btn_save.setEnabled(tblModel.getRowCount() > 0);
        btn_muon.setEnabled(!lbl_maTuaSach.getText().isEmpty());
    }

    private void clearAll() {
        txt_timKiem.setEnabled(false);
        txt_timKiem.setText("");
        lbl_cover.setIcon(null);
        lbl_maTuaSach.setText("");
        lbl_tenSach.setText("");
        txt_ghiChu.setText("");
        btn_timkiem.setEnabled(false);
        lst_pmct = new ArrayList<>();
        tblModel.setRowCount(0);
    }

    void soSachDuocMuon(int tangGiam) {
        soSachDuocMuon += tangGiam;
        lbl_soSachDuocMuon.setText(soSachDuocMuon + "");
        if (soSachDuocMuon <= 0) {
            DialogHelper.alert(jPanel1, "Bạn đã đạt số sách mượn tối đa");
            txt_timKiem.setEnabled(false);
            btn_timkiem.setEnabled(false);
        } else {
            txt_timKiem.setEnabled(true);
            btn_timkiem.setEnabled(true);
        }
    }

    void getAnh(String photoName) {
        InputStream input;
        try {
            String select_sql = "select * from photo where photoName = ?";
            ResultSet rs = JdbcHelper.executeQuery(select_sql, photoName);
            File file = new File("images", "cover.jpg");
            FileOutputStream fos = new FileOutputStream(file);

            if (rs.next()) {
                input = rs.getBinaryStream("photo");
                byte buffer[] = new byte[1024];
                while (input.read(buffer) > 0) {
                    fos.write(buffer);
                }
                lbl_cover.setIcon(EzHelper.readImg(file.getName()));
            }
        } catch (Exception e) {
        }
    }
}
